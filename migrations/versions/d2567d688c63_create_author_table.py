"""create author table

Revision ID: d2567d688c63
Revises: e96a5d8da525
Create Date: 2022-07-13 00:24:08.764113

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd2567d688c63'
down_revision = 'e96a5d8da525'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    author_table = op.create_table('author',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    keyword_table = op.create_table('keyword',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    author_keyword_table = op.create_table('author_keyword',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keyword.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.bulk_insert(author_table, [{"name": f"test{0}"} for i in range(10)])
    op.bulk_insert(keyword_table, [{"text": f"test{0}"} for i in range(10)])
    op.bulk_insert(author_keyword_table, [{"author_id": i+1, "keyword_id": i+1} for i in range(10)])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('author_keyword')
    op.drop_table('keyword')
    op.drop_table('author')
    # ### end Alembic commands ###
